{"version":3,"sources":["BooksAPI.js","Books.js","views/SearchPage.js","Shelf.js","views/Homepage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Books","_this$props","this","props","bookLists","moveBook","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","e","target","value","disabled","title","length","slice","authors","join","Component","Searchpage","state","searchedBooks","updateQuery","_this","setState","getSearchedBooks","error","_this2","_this$state","allBooks","Link","to","type","placeholder","event","map","currentShelf","savedBook","src_Books","key","Shelf","heading","shelfId","filter","Homepage","createShelf","b","src_Shelf","BooksApp","getBooks","catch","err","console","log","Route","exact","path","render","views_Homepage","SearchPage","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b33ba013.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React,{Component} from 'react'\r\n\r\nclass Books extends Component {\r\n\trender() {\r\n\t\tconst {bookLists,moveBook,shelf} = this.props;\r\n\t\treturn (\r\n\t\t\t<li>\r\n\t\t\t\t<div className=\"book\">\r\n\t\t\t\t\t<div className=\"book-top\">\r\n\t\t\t\t\t{/* checks if thumbnail is available, and displays accordingly */}\r\n\t\t\t\t\t\t<div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${bookLists.imageLinks && bookLists.imageLinks.thumbnail})` }}></div>\r\n\t\t\t\t\t\t<div className=\"book-shelf-changer\">\r\n\t\t\t\t\t\t\t<select onChange={e => moveBook(bookLists,e.target.value)} value={shelf}>\r\n\t\t\t\t\t\t\t\t<option value=\"move\" disabled>Move to...</option>\r\n\t\t\t\t\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\r\n\t\t\t\t\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\r\n\t\t\t\t\t\t\t\t<option value=\"read\">Read</option>\r\n\t\t\t\t\t\t\t\t<option value=\"none\">None</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* truncates the book title if it is too long */}\r\n\t\t\t\t\t<div className=\"book-title\">{bookLists.title.length > 60 ? bookLists.title.slice(0,60)+'...' : bookLists.title}</div>\r\n\t\t\t\t\t{/* checks if author is available and displays accordingly */}\r\n\t\t\t\t\t<div className=\"book-authors\">{bookLists.authors && (bookLists.authors.join(', '))}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Books","import React,{Component} from 'react'\r\nimport { search } from '../BooksAPI'\r\nimport {Link} from 'react-router-dom'\r\nimport Books from '../Books'\r\n\r\nclass Searchpage extends Component {\r\n\tstate = {\r\n\t\tquery: '',\r\n\t\tsearchedBooks: []\r\n\t}\r\n\r\n\t// updates the query with whatever is typed into the input search field \r\n\tupdateQuery = (query) => {\r\n\t\tthis.setState({\r\n\t\t\tquery: query\r\n\t\t});\r\n\t\tthis.getSearchedBooks(query);\r\n\t}\r\n\r\n\t// gets an array of books matching the query and updates the state\r\n\tgetSearchedBooks = (query) => {\r\n\t\tif (query) {\r\n\t\t\tsearch(query).then((books)=> {\r\n\t\t\t\t(books.error) ? this.setState({\r\n\t\t\t\t\t// shows an empty page if there is an error while searching\r\n\t\t\t\t\t\tsearchedBooks: []\r\n\t\t\t\t\t})\r\n\t\t\t\t: this.setState({\r\n\t\t\t\t\tsearchedBooks: books\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsearchedBooks: []\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst {query,searchedBooks} = this.state,\r\n\t\t\t{allBooks,moveBook} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"search-books\">\r\n\t\t\t\t<div className=\"search-books-bar\">\r\n\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t<button className=\"close-search\">Close</button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"search-books-input-wrapper\">\t\t\t\t\t\r\n\t\t\t\t\t<input type=\"text\" placeholder=\"Search by title or author\" value={query} onChange={event => this.updateQuery(event.target.value)}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"search-books-results\">\r\n\t\t\t\t<ol className=\"books-grid\">\r\n\t\t\t\t\t{searchedBooks.map( book => {\r\n\t\t\t\t\t\t// determines the shelf state for each book in the search page by comparing with books in homepage\r\n\t\t\t\t\t\tlet currentShelf = 'none';\r\n\t\t\t\t\t\tallBooks.map(savedBook => \r\n\t\t\t\t\t\t\t(book.id === savedBook.id) ? currentShelf = savedBook.shelf : '' \r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\treturn (<Books bookLists={book} key={book.id} moveBook={moveBook} shelf={currentShelf}/>)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Searchpage","import React,{Component} from 'react'\r\nimport Books from './Books';\r\n\r\nclass Shelf extends Component {\r\n\trender() {\r\n\t\tconst {heading,allBooks,shelfId,moveBook} = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"bookshelf\">\r\n\t\t\t\t<h2 className=\"bookshelf-title\">{heading}</h2>\r\n\t\t\t\t<div className=\"bookshelf-books\">\r\n\t\t\t\t\t<ol className=\"books-grid\">\r\n\t\t\t\t\t\t{allBooks\r\n\t\t\t\t\t\t\t.filter(books => books.shelf === shelfId)\r\n\t\t\t\t\t\t\t.map(book => <Books key={book.id} bookLists={book} moveBook={moveBook} shelf={book.shelf}/>)}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Shelf","import React,{Component} from 'react'\r\nimport Shelf from '../Shelf'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Homepage extends Component {\r\n\t\r\n\t// small helper function to DRY up the code for creating three shelves\r\n\tcreateShelf = (a,b) => {\r\n\t\treturn (<Shelf key={this.props.allBooks.shelf} shelfId={a} heading={b} allBooks={this.props.allBooks} moveBook = {this.props.moveBook}/>)\r\n\t}\r\n\t\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"list-books\">\r\n\t\t\t\t<div className=\"list-books-title\">\r\n\t\t\t\t\t<h1>MyReads</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"list-books-content\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{this.createShelf('currentlyReading','Currently Reading')}\r\n\t\t\t\t\t\t{this.createShelf('wantToRead','Want to Read')}\r\n\t\t\t\t\t\t{this.createShelf('read','Read')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to='/search'>\r\n\t\t\t\t\t<div className=\"open-search\">\r\n\t\t\t\t\t\t<button>Add a book</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Homepage","import React from 'react'\r\nimport './App.css'\r\nimport {Route} from 'react-router-dom'\r\nimport Searchpage from './views/SearchPage'\r\nimport Homepage from './views/Homepage'\r\nimport { update, getAll } from './BooksAPI';\r\n\r\nclass BooksApp extends React.Component {\r\n\r\n  state = {\r\n\t\tallBooks : []\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.getBooks();\r\n\t}\r\n\r\n\t// sets the state to all current books that are in the shelves\r\n\tgetBooks = () => {\r\n\t\tgetAll().then((books) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tallBooks: books\r\n\t\t\t});\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\t}\r\n\t\r\n\t// moves and updates the books from one shelf to another selected shelf\r\n\tmoveBook = (book,shelf) => {\r\n\t\tupdate(book, shelf).then(this.getBooks);\r\n\t}\r\n\r\n  render() {\r\n\t\tconst {allBooks} = this.state;\r\n    return (\r\n      <div className=\"app\">\r\n\t\t\t\t{/* the homepage component */}\r\n        <Route exact path='/' render={()=>(<Homepage moveBook={this.moveBook} allBooks={allBooks}/>)}/>\r\n\t\t\t\t{/* the searchpage component */}\r\n        <Route path='/search' render={()=>(<Searchpage moveBook={this.moveBook} allBooks={allBooks}/>)}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}